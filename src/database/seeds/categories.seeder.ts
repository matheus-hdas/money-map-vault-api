import { Seeder, SeederFactoryManager } from 'typeorm-extension';
import { DataSource } from 'typeorm';
import { Category } from '../entities/category.entity';
import { CategoryType } from '../entities/category.entity';

export default class CategoriesSeeder implements Seeder {
  track = false;

  public async run(
    dataSource: DataSource,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    _factoryManager: SeederFactoryManager,
  ): Promise<void> {
    console.log('üå± Running categories seed...');

    const repository = dataSource.getRepository(Category);

    const existingCategories = await repository.count();
    if (existingCategories > 0) {
      console.log('‚ö†Ô∏è  Categories already exist in database. Skipping seed...');
      return;
    }

    const parentCategories = [
      {
        name: 'Work',
        type: CategoryType.INCOME,
        color: '#4CAF50',
        icon: 'work',
        description: 'Income from professional activities',
        isSystem: true,
        isActive: true,
        sortOrder: 1,
      },
      {
        name: 'Investments',
        type: CategoryType.INCOME,
        color: '#2196F3',
        icon: 'trending_up',
        description: 'Returns from financial investments',
        isSystem: true,
        isActive: true,
        sortOrder: 2,
      },
      {
        name: 'Other Income',
        type: CategoryType.INCOME,
        color: '#FF9800',
        icon: 'attach_money',
        description: 'Other income sources',
        isSystem: true,
        isActive: true,
        sortOrder: 3,
      },
      {
        name: 'Essentials',
        type: CategoryType.EXPENSE,
        color: '#F44336',
        icon: 'home',
        description: 'Basic and necessary expenses',
        isSystem: true,
        isActive: true,
        sortOrder: 1,
      },
      {
        name: 'Lifestyle',
        type: CategoryType.EXPENSE,
        color: '#9C27B0',
        icon: 'local_play',
        description: 'Quality of life expenses',
        isSystem: true,
        isActive: true,
        sortOrder: 2,
      },
      {
        name: 'Development',
        type: CategoryType.EXPENSE,
        color: '#009688',
        icon: 'school',
        description: 'Personal growth investments',
        isSystem: true,
        isActive: true,
        sortOrder: 3,
      },
      {
        name: 'Financial',
        type: CategoryType.EXPENSE,
        color: '#607D8B',
        icon: 'account_balance',
        description: 'Financial and administrative expenses',
        isSystem: true,
        isActive: true,
        sortOrder: 4,
      },
    ];

    const savedParents = await repository.save(parentCategories);
    console.log(`‚úÖ ${savedParents.length} parent categories created`);

    const parentsMap = new Map<string, Category>();
    savedParents.forEach((parent) => parentsMap.set(parent.name, parent));

    const subCategories = [
      {
        name: 'Salary',
        type: CategoryType.INCOME,
        color: '#4CAF50',
        icon: 'payments',
        description: 'Monthly salary',
        isSystem: true,
        isActive: true,
        sortOrder: 1,
        parentId: parentsMap.get('Work')!.id,
      },
      {
        name: 'Freelance',
        type: CategoryType.INCOME,
        color: '#8BC34A',
        icon: 'laptop',
        description: 'Freelance work',
        isSystem: true,
        isActive: true,
        sortOrder: 2,
        parentId: parentsMap.get('Work')!.id,
      },
      {
        name: 'Commissions',
        type: CategoryType.INCOME,
        color: '#CDDC39',
        icon: 'percent',
        description: 'Commissions and bonuses',
        isSystem: true,
        isActive: true,
        sortOrder: 3,
        parentId: parentsMap.get('Work')!.id,
      },
      {
        name: 'Dividends',
        type: CategoryType.INCOME,
        color: '#2196F3',
        icon: 'bar_chart',
        description: 'Stock dividends',
        isSystem: true,
        isActive: true,
        sortOrder: 1,
        parentId: parentsMap.get('Investments')!.id,
      },
      {
        name: 'Interest',
        type: CategoryType.INCOME,
        color: '#3F51B5',
        icon: 'savings',
        description: 'Investment interest',
        isSystem: true,
        isActive: true,
        sortOrder: 2,
        parentId: parentsMap.get('Investments')!.id,
      },
      {
        name: 'Rental Income',
        type: CategoryType.INCOME,
        color: '#FF9800',
        icon: 'house',
        description: 'Rental income',
        isSystem: true,
        isActive: true,
        sortOrder: 1,
        parentId: parentsMap.get('Other Income')!.id,
      },
      {
        name: 'Sales',
        type: CategoryType.INCOME,
        color: '#FF5722',
        icon: 'store',
        description: 'Product or service sales',
        isSystem: true,
        isActive: true,
        sortOrder: 2,
        parentId: parentsMap.get('Other Income')!.id,
      },
      {
        name: 'Housing',
        type: CategoryType.EXPENSE,
        color: '#795548',
        icon: 'home',
        description: 'Rent, mortgage, condo fees',
        isSystem: true,
        isActive: true,
        sortOrder: 1,
        parentId: parentsMap.get('Essentials')!.id,
      },
      {
        name: 'Food',
        type: CategoryType.EXPENSE,
        color: '#FF5722',
        icon: 'restaurant',
        description: 'Groceries, restaurants',
        isSystem: true,
        isActive: true,
        sortOrder: 2,
        parentId: parentsMap.get('Essentials')!.id,
      },
      {
        name: 'Transportation',
        type: CategoryType.EXPENSE,
        color: '#3F51B5',
        icon: 'directions_car',
        description: 'Gas, maintenance, public transport',
        isSystem: true,
        isActive: true,
        sortOrder: 3,
        parentId: parentsMap.get('Essentials')!.id,
      },
      {
        name: 'Health',
        type: CategoryType.EXPENSE,
        color: '#F44336',
        icon: 'local_hospital',
        description: 'Health insurance, medications, consultations',
        isSystem: true,
        isActive: true,
        sortOrder: 4,
        parentId: parentsMap.get('Essentials')!.id,
      },
      {
        name: 'Utilities',
        type: CategoryType.EXPENSE,
        color: '#FFC107',
        icon: 'bolt',
        description: 'Electricity, water, internet, phone',
        isSystem: true,
        isActive: true,
        sortOrder: 5,
        parentId: parentsMap.get('Essentials')!.id,
      },
      {
        name: 'Entertainment',
        type: CategoryType.EXPENSE,
        color: '#9C27B0',
        icon: 'movie',
        description: 'Movies, shows, entertainment',
        isSystem: true,
        isActive: true,
        sortOrder: 1,
        parentId: parentsMap.get('Lifestyle')!.id,
      },
      {
        name: 'Clothing',
        type: CategoryType.EXPENSE,
        color: '#E91E63',
        icon: 'checkroom',
        description: 'Clothes, shoes, accessories',
        isSystem: true,
        isActive: true,
        sortOrder: 2,
        parentId: parentsMap.get('Lifestyle')!.id,
      },
      {
        name: 'Travel',
        type: CategoryType.EXPENSE,
        color: '#00BCD4',
        icon: 'flight',
        description: 'Travel and tourism',
        isSystem: true,
        isActive: true,
        sortOrder: 3,
        parentId: parentsMap.get('Lifestyle')!.id,
      },
      {
        name: 'Pets',
        type: CategoryType.EXPENSE,
        color: '#8BC34A',
        icon: 'pets',
        description: 'Pet expenses',
        isSystem: true,
        isActive: true,
        sortOrder: 4,
        parentId: parentsMap.get('Lifestyle')!.id,
      },
      {
        name: 'Education',
        type: CategoryType.EXPENSE,
        color: '#009688',
        icon: 'school',
        description: 'Courses, books, education',
        isSystem: true,
        isActive: true,
        sortOrder: 1,
        parentId: parentsMap.get('Development')!.id,
      },
      {
        name: 'Technology',
        type: CategoryType.EXPENSE,
        color: '#607D8B',
        icon: 'devices',
        description: 'Equipment, software, subscriptions',
        isSystem: true,
        isActive: true,
        sortOrder: 2,
        parentId: parentsMap.get('Development')!.id,
      },
      {
        name: 'Taxes',
        type: CategoryType.EXPENSE,
        color: '#9E9E9E',
        icon: 'account_balance',
        description: 'Income tax, property tax, vehicle tax, fees',
        isSystem: true,
        isActive: true,
        sortOrder: 1,
        parentId: parentsMap.get('Financial')!.id,
      },
      {
        name: 'Insurance',
        type: CategoryType.EXPENSE,
        color: '#795548',
        icon: 'security',
        description: 'Various insurance policies',
        isSystem: true,
        isActive: true,
        sortOrder: 2,
        parentId: parentsMap.get('Financial')!.id,
      },
      {
        name: 'Investments',
        type: CategoryType.EXPENSE,
        color: '#673AB7',
        icon: 'trending_up',
        description: 'Investment contributions',
        isSystem: true,
        isActive: true,
        sortOrder: 3,
        parentId: parentsMap.get('Financial')!.id,
      },
      {
        name: 'Donations',
        type: CategoryType.EXPENSE,
        color: '#E91E63',
        icon: 'favorite',
        description: 'Donations and charity',
        isSystem: true,
        isActive: true,
        sortOrder: 4,
        parentId: parentsMap.get('Financial')!.id,
      },
    ];

    await repository.save(subCategories);
    console.log(`‚úÖ ${subCategories.length} subcategories created`);

    console.log(
      `üéâ Total: ${savedParents.length + subCategories.length} categories created with hierarchical structure!`,
    );
  }
}
